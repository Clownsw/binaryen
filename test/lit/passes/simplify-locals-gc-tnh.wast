;; NOTE: Assertions have been generated by update_lit_checks.py and should not be edited.
;; RUN: wasm-opt %s --simplify-locals -all --nominal -S -o - | filecheck %s

(module
  (type $array (array_subtype (mut i32) data))

  (type $array-immutable (array_subtype i32 data))

  (func $array-mutable (param $a (ref $array)) (result i32)
    (local $temp i32)
    ;; As the array is mutable, it can be modified in the call, and we cannot
    ;; reorder here.
    (local.set $temp
      (array.get $array
        (local.get $a)
        (i32.const 0)
      )
    )
    (call $helper)
    (local.get $temp)
  )

  (func $array-immutable (param $a (ref $array-immutable)) (result i32)
    (local $temp i32)
    ;; As the array is immutable, it cannot be modified in the call, and we can
    ;; reorder here.
    (local.set $temp
      (array.get $array-immutable
        (local.get $a)
        (i32.const 0)
      )
    )
    (call $helper)
    (local.get $temp)
  )

  (func $array-copy (param $a (ref $array)) (param $b (ref $array-immutable)) (result i32)
    (local $temp i32)
    (local.set $temp
      (array.get $array
        (local.get $a)
        (i32.const 0)
      )
    )
    ;; This copy prevents reordering, as we write to an array. More specific
    ;; type analysis could have helped, though.
    (array.copy $array $array-immutable
      (local.get $a)
      (i32.const 11)
      (local.get $b)
      (i32.const 42)
      (i32.const 1337)
    )
    (local.get $temp)
  )

  (func $array-copy-immutable (param $a (ref $array)) (param $b (ref $array-immutable)) (result i32)
    (local $temp i32)
    (local.set $temp
      ;; As above, but now we read from an immutable array, which can be moved
      ;; past the copy.
      (array.get $array-immutable
        (local.get $b)
        (i32.const 0)
      )
    )
    (array.copy $array $array-immutable
      (local.get $a)
      (i32.const 11)
      (local.get $b)
      (i32.const 42)
      (i32.const 1337)
    )
    (local.get $temp)
  )

  ;; Helper function for the above.
  (func $helper)
)
